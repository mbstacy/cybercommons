version: "3.7"
services:
  cybercom_nginx:
    image: nginx:1.17
    restart: unless-stopped
    expose:
      - 80
    ports:
      - 80:80
    depends_on:
      - cybercom_api
    volumes:
      - ./dc_config/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./web:/usr/share/nginx/html
  cybercom_mongo:
    image: mongo
    command: --tlsMode requireTLS --tlsCertificateKeyFile /ssl/server/mongodb.pem --tlsCAFile /ssl/testca/cacert.pem --auth
    restart: unless-stopped
    environment:
      - MONGO_DB
      - MONGO_TOMBSTONE_COLLECTION
      - MONGO_LOG_COLLECTION
      - MONGO_USERNAME
      - MONGO_PASSWORD
    expose:
      - 27017
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
      - ./dc_config/ssl/backend:/ssl
  cybercom_rabbitmq:
    image: rabbitmq:3.6
    restart: unless-stopped
    environment:
      - RABBITMQ_SSL_CERT_FILE
      - RABBITMQ_SSL_KEY_FILE
      - RABBITMQ_SSL_CA_FILE
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
      - RABBITMQ_DEFAULT_VHOST
    volumes:
      - ./dc_config/ssl/backend:/ssl
    expose:
      - 5671
    ports:
      - 5671:5671
  cybercom_memcache:
    image: memcached
    restart: unless-stopped
    expose:
      - 11211
    ports:
      - 11211:11211
  cybercom_celery:
    image: celeryapp
    restart: unless-stopped
    build: dc_config/images/celery
    cap_add:
      - MKNOD
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    devices:
      - /dev/fuse
    volumes:
      - ./dc_config/ssl/backend:/ssl
    environment: 
      - MONGO_DB
      - MONGO_TOMBSTONE_COLLECTION
      - CELERY_IMPORTS
      - CELERY_SOURCE
      - CELERY_QUEUE
      - LOG_LEVEL
      - BROKER_USE_SSL
      - SSL_PATH
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
      - RABBITMQ_DEFAULT_VHOST
      - MONGO_USERNAME
      - MONGO_PASSWORD
      - AWSACCESSKEYID
      - AWSSECRETACCESSKEY
      - AWSBUCKETNAME
      - ALMA_READ_TOKEN
      - ALMA_RW_TOKEN
    depends_on:
      - cybercom_mongo
      - cybercom_rabbitmq
  cybercom_api:
    image: api:latest
    restart: unless-stopped
    user: "${UID}:${GID}"
    build: 
      context: .
      args:
        UNAME: apiuser
        UID: "${UID}"
        GID: "${GID}"
    environment: 
      - APPLICATION_TITLE
      - DEBUG
      - ALLOWED_HOSTS
      - MONGO_DB
      - MONGO_TOMBSTONE_COLLECTION
      - MONGO_LOG_COLLECTION
      - SSL_PATH
      - DJANGO_SECRET_KEY
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
      - RABBITMQ_DEFAULT_VHOST
      - MONGO_USERNAME
      - MONGO_PASSWORD
      - EMAIL_BACKEND
      - EMAIL_HOST
      - EMAIL_PORT
      - EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD
      - EMAIL_USE_TLS
    volumes:
      - ./dc_config/ssl/backend:/ssl
      - ./db.sqlite3:/app/db.sqlite3
    expose:
      - 8080
    ports:
      - 8080:8080
    depends_on:
      - cybercom_mongo
      - cybercom_rabbitmq
volumes:
  mongodata:
    name: "${MONGO_DOCKER_VOLUME_PREFIX}_mongo"
    external: true
